#!/bin/bash
# Script de Valida√ß√£o - Fase 1: Teste Unit√°rio (3 PDFs)
# Sistema OCR - Of√≠cios Requisit√≥rios TJSP

set -e  # Exit on error

echo "=========================================="
echo "üß™ VALIDA√á√ÉO FASE 1 - Teste Unit√°rio"
echo "=========================================="
echo ""

# Configura√ß√µes
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.." && pwd)"
VALIDATION_DIR="${PROJECT_DIR}/_validation_v1"
OUTPUT_DIR="${VALIDATION_DIR}/outputs/fase1_teste_unitario"
INPUT_DIR="${PROJECT_DIR}/data/consultas"

echo "üìÅ Diret√≥rios:"
echo "   Projeto: ${PROJECT_DIR}"
echo "   Valida√ß√£o: ${VALIDATION_DIR}"
echo "   Input: ${INPUT_DIR}"
echo "   Output: ${OUTPUT_DIR}"
echo ""

# Verificar ambiente virtual
if [ -z "$VIRTUAL_ENV" ]; then
    echo "‚ö†Ô∏è  Ambiente virtual n√£o ativado!"
    echo "   Execute: source .venv/bin/activate"
    exit 1
fi

echo "‚úÖ Ambiente virtual ativado: ${VIRTUAL_ENV}"
echo ""

# Verificar .env
if [ ! -f "${PROJECT_DIR}/.env" ]; then
    echo "‚ùå Arquivo .env n√£o encontrado!"
    echo "   Copie .env.example e configure as vari√°veis"
    exit 1
fi

echo "‚úÖ Arquivo .env encontrado"
echo ""

# Verificar OPENAI_API_KEY
source "${PROJECT_DIR}/.env"
if [ -z "$OPENAI_API_KEY" ]; then
    echo "‚ùå OPENAI_API_KEY n√£o configurada no .env"
    exit 1
fi

echo "‚úÖ OPENAI_API_KEY configurada"
echo ""

# Verificar estrutura de PDFs
if [ ! -d "$INPUT_DIR" ]; then
    echo "‚ùå Diret√≥rio de PDFs n√£o encontrado: ${INPUT_DIR}"
    exit 1
fi

PDF_COUNT=$(find "$INPUT_DIR" -name "*.pdf" | wc -l | tr -d ' ')
echo "üìä Total de PDFs dispon√≠veis: ${PDF_COUNT}"
echo ""

if [ "$PDF_COUNT" -lt 3 ]; then
    echo "‚ö†Ô∏è  Menos de 3 PDFs dispon√≠veis para teste"
    echo "   Continuando com ${PDF_COUNT} PDF(s)..."
fi

# Criar diret√≥rios de output
mkdir -p "${OUTPUT_DIR}/jsons"
mkdir -p "${OUTPUT_DIR}/logs"
mkdir -p "${OUTPUT_DIR}/anomalias"

echo "üìÇ Estrutura de output criada"
echo ""

# Executar processamento
echo "=========================================="
echo "üöÄ Iniciando processamento..."
echo "=========================================="
echo ""

cd "$PROJECT_DIR"

python exportar_json.py \
    --input "$INPUT_DIR" \
    --output "${OUTPUT_DIR}/jsons" \
    --limite 3

echo ""
echo "=========================================="
echo "‚úÖ Processamento conclu√≠do!"
echo "=========================================="
echo ""

# An√°lise de resultados
echo "üìä An√°lise de Resultados:"
echo ""

JSON_COUNT=$(find "${OUTPUT_DIR}/jsons" -name "*.json" -type f | wc -l | tr -d ' ')
echo "   JSONs gerados: ${JSON_COUNT}"

if [ "$JSON_COUNT" -gt 0 ]; then
    echo ""
    echo "   Arquivos gerados:"
    find "${OUTPUT_DIR}/jsons" -name "*.json" -type f | while read -r file; do
        size=$(du -h "$file" | cut -f1)
        echo "      - $(basename "$file") (${size})"
    done
fi

echo ""
echo "üìù Logs dispon√≠veis em:"
echo "   ${OUTPUT_DIR}/logs/"
echo ""

echo "=========================================="
echo "‚úÖ FASE 1 CONCLU√çDA"
echo "=========================================="
echo ""
echo "Pr√≥ximos passos:"
echo "1. Revisar JSONs gerados em: ${OUTPUT_DIR}/jsons/"
echo "2. Verificar logs em: ${OUTPUT_DIR}/logs/"
echo "3. Analisar anomalias (se houver)"
echo "4. Validar campos obrigat√≥rios"
echo "5. Validar dados banc√°rios (ANEXO II)"
echo ""
